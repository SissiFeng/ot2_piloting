version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file:
      - docker/.env
    ports:
      - "7860:7860"
    depends_on:
      - postgres
      - mongodb
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    networks:
      - ot2-network

  postgres:
    image: postgres:latest
    env_file:
      - docker/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ot2-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    env_file:
      - docker/.env
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - ot2-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - ot2-network

  grafana:
    image: grafana/grafana:latest
    env_file:
      - docker/.env
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - ot2-network

networks:
  ot2-network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:
  prometheus_data:
  grafana_data: 